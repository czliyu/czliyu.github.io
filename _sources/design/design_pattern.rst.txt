设计模式
==================

.. post:: 7 Sep 2020
   :tags: design, java, 设计模式, base
   :category: design, 设计模式, java
   :author: me

策略模式
---------------

::

    策略模式定义了算法族，分别封装起来，让它们之间可以互相替换，此模式
    让算法的变化独立于使用算法的客户。


code ...

观察者模式
-----------------

::

    观察者模式定义了对象之间一对多的依赖，这样一来，当一个对象改变状态时，
    它的所有依赖都会收到通知并自动更新。

装饰者模式
-------------------

::

    装饰者模式动态地将责任附加到对象上。若要扩展功能，装饰者提供了比继承更有弹性de
    替代方案。

重点在于，装饰者和被装饰者必须是一样的类型。也就是有共同的超类。

装饰者通常是用其他类似于工厂或者生成器这样的模式创建的。

缺点：利用装饰者模式，常常造成设计中有大量的小类。

工厂方法模式
---------------

::

    工厂方法模式定义了一个创建对象的接口，但由于类决定要实例化的类是哪一个。工厂方法
    让类把实例化推迟到子类。

.. note::

    我们不应该针对实现编程，但是当我们使用new时，不正是在针对实现编程吗？

简单工厂其实不是一种设计模式。反而比较像是一种编程习惯。

抽象工厂模式
-----------------

::

    抽象工厂模式提供了一个接口，用于创建相关或依赖对象的家族，而不需要明确指定具体类。

抽象工厂允许客户使用抽象的接口来创建一组相关的产品，而不需要知道实际产出的具体产品是什么。

抽象工厂的方法经常以工厂方法的方式实现。

