算法 - 排序
===================

.. post:: 4 Mar 2020
   :tags: java,算法,基础
   :category: java, 算法, 基础
   :author: me

   

排序就是将一组对象按照某种逻辑顺序重新排列的过程。

学习排序3大实际意义::

   * 对排序算法的分析将有助于你全面理解本书中比较算法性能的方法
   * 类似的技术也能有效解决其他类型问题
   * 排序算法常常是我们解决其他问题的第一步 

排序算法需要2个方法操作数据::

   * less() 对元素进行比较
   * exch() 将元素交换位置 
   
排序模版
------------

.. literalinclude:: code/Example.java
   :language: java


排序算法的额外内存开销和运行时间同样重要。排序算法可以分为两类::

   * 除了函数调用所需的栈和国定数目的实例变量之外无需额外内存的原地址排序
   * 需要额外内存空间来存储另一份数组副本的其他排序算法

数据类型
------------

该排序算法模版适用于任何实现了`comparable`接口的数据类型，在创建自己的数据类型时，我们只要实现Comparable 接口就能保证用例代码可以
讲其排序。只需要实现一个`compareTo()`方法来定义目标类型对象的自然次序。

入下面的`Date`数据类型

.. literalinclude:: code/Date.java
   :language: java

选择排序
------------

首先，找到数组中最小的那个元素，其次将它和数组中第一个元素交换位置，再次在剩余元素中找到最小元素，将它与第二个元素交换位置。
如此往复，直到将整个数组排序，这种方法叫选择排序。

.. seealso::

   对于长度为N的数据，选择排序需要大约N^2/2次比较和N次交换。

.. code-block:: java

   public class Selection {
        public static void sort(Comparable[] a) {
            int N = a.length;
            for (int i = 0; i< N; i++) {
                int min = i;
                for (int j = i+1; i < N; j++)
                    if (less(a[j], a[min])) min = j; 
                exch(a, i, min);
            } 
        }
        // less()、exch()、isSorted()和main()方法见"排序算法类模版"
   }


插入排序
-------------

通常人们整理桥牌的方法是一张一张的来，插入到其他已经有序的牌中的适当位置，为了给要插入的元素腾出空间
，我们需要将其余所有元素都向右移动一位，这种算法叫插入排序。

.. seealso::

   对于随机排列的长度为N且主键不重复的数组，平均情况下插入排序需要~N^2/4次比较以及～N^2/4次交换，最坏情况下需要～N^2/2次比较和
   ～N^2/2次交换，最好的情况下需要N-1次比较和0次交换。

.. code-block:: java

   public class Insertion {
        public static void sort(Comparable[] a) {
            int N = a.length;
            for (int i = 1; i < N; i++)  {
                for (int j = i; j > 0 && less(a[j], a[j-1]); j--) 
                    exch(a, j, j-1);
            }
        }
        // less() exch() isSorted()
   }

未完待续
